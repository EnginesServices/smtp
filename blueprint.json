{
  "schema": {
    "type": "service_blueprint",
    "version": {
      "major": 0,
      "minor": 1
    },
    "origin": "Engines Developer Studio 0.2"
  },
  "metadata": {
    "blueprint": {
      "version": {
        "major": 0,
        "minor": 0,
        "level": "beta",
        "patch": 0
      }
    },
    "software": {
      "display": {
        "title": "Smtp internal outbound relay",
        "label": "smtp"
      }
    },
    "timestamp": "2019-05-23T11:12:54+10:00"
  },
  "software": {
    "base": {
      "name": "smtp",
      "publisher_namespace": "EnginesSystem",
      "type_path": "smtp",
      "parent_image": "engines/servicebase",
      "deployment_type": "worker",
      "default_stop_timeout": 0,
      "restart_attempts": 0,
      "memory": {
        "required": 64,
        "recommended": 96
      },
      "run_as_user": "postfix"
    },
    "disposition": {
      "attach_post_build": true
    },
    "actionators": [
      {
        "name": "show_queue",
        "label": "Show mail queue",
        "return_type": "json",
        "script": {
          "language": "sh",
          "content": "#!/bin/bash\r\nTMP_FILE=`mktemp`\r\npostqueue -j 2> $TMP_FILE.err 1> $TMP_FILE\r\nresult=$?\r\n\r\nif test $result -ne 0\r\n then\r\n   string_for_json=`cat $TMP_FILE.err`\r\n   rm /tmp/err\r\n   string_for_json=`echo $string_for_json | tr -d \"'\\r\\\"\\t\\f\\b\\n\\v\"`\r\n   echo '{\"Result\":\"FAILED\",\"ReturnCode\":\"'$result'\",\"Error\":\"'$string_for_json'\"}'\r\nelse\r\n  echo '{\"email_queue\":['\r\n  one=1\r\n    cat $TMP_FILE | while read LINE\r\n     do\r\n       if test $one -eq 1\r\n         then\r\n          one=0\r\n       else\r\n          echo -n \",\"\r\n       fi\r\n      echo  -n $LINE\r\n    done\r\n  echo ']}'\r\nfi\r\n\r\nfor FILE in $TMP_FILE.err $TMP_FILE\r\n do\r\n  if test -f $FILE\r\n   then\r\n     rm $FILE\r\n  fi\r\ndone\r\n"
        }
      },
      {
        "name": "flush_queue",
        "label": "Flush mail queue",
        "return_type": "json",
        "script": {
          "language": "sh",
          "content": "#!/bin/bash\r\n\r\npostqueue -f &> /tmp/err\r\nresult=$?\r\nstring_for_json=`cat /tmp/err`\r\nrm /tmp/err\r\nstring_for_json=`echo $string_for_json | tr -d \"'\\r\\\"\\t\\f\\b\\n\\v\"`\r\nif test $result -eq 0\r\n then\r\n  echo '{\"Result\":\"OK\"}'\r\n  else\r\n   echo '{\"Result\":\"FAILED\",\"ReturnCode\":\"'$result'\",\"Error\":\"'$string_for_json'\"}'\r\n  \r\n  fi \r\n"
        }
      },
      {
        "name": "rm_email",
        "label": "Remove email from queue",
        "return_type": "json",
        "enable_logging": true,
        "variables": [
          {
            "name": "queue_id",
            "input": {
              "type": "string",
              "label": "Queue id"
            }
          }
        ],
        "script": {
          "language": "sh",
          "content": "#!/bin/bash\r\n\r\n. /home/engines/functions/params_to_env.sh\r\nparams_to_env\r\n\r\nrequired_values=\"queue_id\"\r\ncheck_required_values \r\n\r\n\r\nsudo -n /home/engines/scripts/actionators/_rm_email.sh   $queue_id &> /tmp/err\r\nresult=$?\r\nstring_for_json=`cat /tmp/err`\r\nrm /tmp/err\r\nstring_for_json=`echo $string_for_json | tr -d \"'\\r\\\"\\t\\f\\b\\n\\v\"`\r\nif test $result -eq 0\r\n then\r\n  echo '{\"Result\":\"OK\"}'\r\n  else\r\n   echo '{\"Result\":\"FAILED\",\"ReturnCode\":\"'$result'\",\"Error\":\"'$string_for_json'\"}'\r\nfi \r\n  \r\n"
        }
      },
      {
        "name": "domain_dkim_text",
        "return_type": "plain_text",
        "variables": [
          {
            "name": "domain_name",
            "mandatory": true,
            "input": {
              "type": "string"
            }
          }
        ]
      },
      {
        "name": "domains_dkim_list",
        "return_type": "json"
      }
    ],
    "configurators": [
      {
        "name": "smarthost",
        "label": "Smart host settings",
        "description": "Configure Smarthost settings ",
        "enable_logging": true,
        "variables": [
          {
            "name": "smart_host_port",
            "value": "25",
            "mandatory": true,
            "input": {
              "type": "integer",
              "label": "Smart host port",
              "placeholder": "port number"
            }
          },
          {
            "name": "smart_hostname",
            "mandatory": true,
            "input": {
              "type": "string"
            }
          },
          {
            "name": "auth_type",
            "value": "none",
            "mandatory": true,
            "input": {
              "type": "select",
              "collection": {
                "items": {
                  "none": "None",
                  "plaintext": "Plain",
                  "md5": "MD5"
                }
              }
            }
          },
          {
            "name": "smart_host_user",
            "input": {
              "type": "string",
              "label": "Username for Smart host authentication"
            }
          },
          {
            "name": "smart_host_passwd",
            "input": {
              "type": "password_with_confirmation",
              "label": "Password for Smart host authentication"
            }
          }
        ],
        "set_script": {
          "language": "sh",
          "content": "#!/bin/bash\r\n\r\n. /home/engines/functions/params_to_env.sh\r\nPARAMS_FILE=/home/engines/scripts/configurators/saved/smarthost\r\nparms_to_file_and_env\r\n     \r\n     \r\nrequired_values=\"smart_hostname\"\r\ncheck_required_values \r\n   \r\nif ! test -z $smart_hostname\r\n then \r\n   if ! test -z $smart_host_port\r\n\tthen\r\n\t\tsmart_host_port=25\r\n   fi\r\n\r\n   echo \"*\tsmtp:$smart_hostname:$smart_host_port\"  > /home/postfix/transport.smart\r\n   cp /etc/postfix/transport.smart /home/postfix/transport\r\nelse\r\n    rm -r /etc/postfix/transport.smart\r\n    touch /etc/postfix/transport.smart\r\n\trm /home/postfix/transport\r\nfi \r\n\r\n\r\nif test -f /home/engines/scripts/configurators/saved/default_domain\r\n  then\r\n   cat /home/engines/scripts/configurators/saved/default_domain | /home/engines/bin/json_to_env >/tmp/.2env\r\n   . /tmp/.2env\r\n    if test $deliver_local -eq 1\r\n     then\r\n      echo \"[$domain_name] :email.engines.internal\" >> /home/postfix/transport\r\n    fi\r\nfi\r\n    \r\nsudo -n /home/engines/scripts/engine/_postmap.sh transport\r\n\r\n \r\n if ! test -z $mail_name\r\n then\r\n \techo $mail_name > /etc/postfix/mailname\r\n fi\r\n sudo -n /home/engines/scripts/engine/_set_mailname.sh $mail_name\r\n \r\n\r\nif test -z $smarthost_password\r\n then \t\r\n  rm /home/postfix/smarthost_passwd\r\nelse\r\n echo \"$smarthost_hostname $smarthost_username:$smarthost_password\" > /home/postfix/smarthost_passwd\r\nfi\r\n\r\nsudo -n /home/engines/scripts/engine/_postmap.sh smarthost_passwd     \r\n\r\nexit 0"
        },
        "read_script": {
          "language": "sh",
          "content": "#!/bin/sh\r\n\r\nif test -f /home/engines/scripts/configurators/saved/smarthost\r\nthen\r\n\tcat /home/engines/scripts/configurators/saved/smarthost\r\nelse\r\n\techo '{\"smarthost_hostname\":\"Not Set\"}'\r\nfi\r\nexit 0"
        }
      },
      {
        "name": "default_domain",
        "label": "Default Domain",
        "enable_logging": true,
        "variables": [
          {
            "name": "deliver_local",
            "value": "false",
            "input": {
              "type": "checkbox_boolean"
            }
          },
          {
            "name": "domain_name",
            "value": "_Engines_System(default_domain)",
            "mandatory": true,
            "input": {
              "type": "string",
              "label": "Default Domain"
            }
          }
        ],
        "set_script": {
          "language": "sh",
          "content": "#!/bin/bash\r\n\r\nfunction build_templated_mapfile {\r\n if test -f /home/engines/templates/$map_file \r\n  then\r\n\trm /home/postfix/$map_file\r\n fi\r\n  \r\n cat /home/engines/templates/$map_file | while read LINE\r\n do\r\n  eval echo $LINE >> /home/postfix/$map_file\r\n done\r\nsudo -n /home/engines/scripts/engine/_postmap.sh $map_file\r\n}\r\n\r\n. /home/engines/functions/params_to_env.sh\r\nPARAMS_FILE=/home/engines/scripts/configurators/saved/default_domain\r\nparms_to_file_and_env\r\n\r\nrequired_values=\"domain_name\"\r\ncheck_required_values \r\n\r\necho ${domain_name} >/home/engines/scripts/configurators/saved/domain\r\n\r\nsudo -n /home/engines/scripts/engine/_set_mailname.sh smtp.${domain_name}\r\n\r\nfor map_file in generic sender_canonical\r\ndo\r\n build_templated_mapfile\r\ndone\r\n \r\n\r\n\t\r\ncp /home/engines/templates/transport /home/postfix/\r\n\r\nif test -f /etc/postfix/transport.smart \r\n then\r\n  if test `wc -c /etc/postfix/transport.smart | cut -f 1 -d\" \" ` -gt 4\r\n   then\r\n\tcat /etc/postfix/transport.smart >> /home/postfix/transport \r\n  fi\r\nfi\r\n\r\nif ! test -z $deliver_local \r\n then\r\n  if test  $deliver_local -eq 1 \r\n   then                 \r\n\t echo ${domain_name} :[email.engines.internal]\t>> /home/postfix/transport \t\t\t\r\n   fi\r\nfi\t\r\nsudo -n /home/engines/scripts/engine/_postmap.sh transport\r\n\r\n\r\nexit $?\r\n"
        },
        "read_script": {
          "language": "sh",
          "content": "#!/bin/bash\r\n\r\nif test -f /home/engines/scripts/configurators/saved/default_domain\r\n then\r\n\tcat /home/engines/scripts/configurators/saved/default_domain\r\nelse\r\n\techo '{\"default_domain\":\"Not Set\"}'\r\nfi\r\nexit 0"
        }
      },
      {
        "name": "notifications_email",
        "label": "Notifications email",
        "enable_logging": true,
        "variables": [
          {
            "name": "notifications_email",
            "input": {
              "type": "email",
              "label": "Destination for emails sent to system admin"
            }
          },
          {
            "name": "postmaster_email",
            "input": {
              "type": "email",
              "label": "Postmasters email ",
              "comment": "defaults to notifications email"
            }
          },
          {
            "name": "webmaster_email",
            "input": {
              "type": "email",
              "label": "Webmaster email address",
              "comment": "defaults to notifications email"
            }
          },
          {
            "name": "hostmaster_email",
            "input": {
              "type": "email",
              "label": "Hostmaster email",
              "comment": "defaults to notifications email"
            }
          }
        ],
        "set_script": {
          "language": "sh",
          "content": "#!/bin/bash\r\n\r\n. /home/engines/functions/params_to_env.sh\r\nPARAMS_FILE=/home/engines/scripts/configurators/saved/notifications_email\r\nparms_to_file_and_env\r\n     \r\n     \r\nrequired_values=\"notifications_email\"\r\ncheck_required_values \r\n\r\n\r\nif test -z $postmaster_email\r\n  then\r\n   postmaster_email=$notifications_email fi\r\nif test -z $hostmaster_email\r\n  then\r\n   hostmaster_email=$notifications_email\r\nfi\r\nif test -z $webmaster_email\r\n  then\r\n   webmaster_email=$notifications_email\r\nfi \r\n\r\n\r\nALIAS_FILE=/tmp/aliases\r\ncat /home/engines/templates/aliases | while read LINE\r\ndo\r\n eval echo $LINE >> $ALIAS_FILE\r\ndone\r\n\r\nsudo -n /home/engines/scripts/configurators/_$0"
        }
      },
      {
        "name": "create_domain_dkim",
        "variables": [
          {
            "name": "domain_name",
            "mandatory": true,
            "input": {
              "type": "string"
            }
          }
        ]
      },
      {
        "name": "rm_domain_dkim",
        "variables": [
          {
            "name": "domain_name",
            "mandatory": true,
            "input": {
              "type": "string"
            }
          }
        ]
      },
      {
        "name": "import_domain_dkim",
        "variables": [
          {
            "name": "domain_name",
            "mandatory": true,
            "input": {
              "type": "string"
            }
          },
          {
            "name": "private",
            "mandatory": true,
            "input": {
              "type": "text"
            }
          },
          {
            "name": "public",
            "mandatory": true,
            "input": {
              "type": "text"
            }
          }
        ]
      }
    ]
  }
}
